// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Star_Security_Services.Models.Data;

#nullable disable

namespace Star_Security_Services.Migrations
{
    [DbContext(typeof(Application_dbContext))]
    [Migration("20240217084452_Reintialize")]
    partial class Reintialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Star_Security_Services.Models.Data.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("AdminContact")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("AdminImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("AdminId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Clients", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"), 1L, 1);

                    b.Property<string>("ClientImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("ClientProfession")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("ClientReview")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("Varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Department", b =>
                {
                    b.Property<int>("Dept_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dept_id"), 1L, 1);

                    b.Property<string>("Dept_location")
                        .IsRequired()
                        .HasColumnType("Varchar(70)");

                    b.Property<string>("Dept_name")
                        .IsRequired()
                        .HasColumnType("Varchar(70)");

                    b.HasKey("Dept_id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeCode"), 1L, 1);

                    b.Property<int>("Dep_id")
                        .HasColumnType("int");

                    b.Property<string>("EmpImage")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("Emp_Grade")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("Emp_address")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<int>("Emp_age")
                        .HasColumnType("int");

                    b.Property<string>("Emp_contact")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Emp_email")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("Emp_name")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Emp_qualification")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeCode");

                    b.HasIndex("Dep_id");

                    b.HasIndex("RoleID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.EmpRoles", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Role_id"), 1L, 1);

                    b.Property<string>("Role_name")
                        .IsRequired()
                        .HasColumnType("Varchar(70)");

                    b.HasKey("Role_id");

                    b.ToTable("empRoles");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Industries", b =>
                {
                    b.Property<int>("IndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndustryId"), 1L, 1);

                    b.Property<string>("IndustryImage")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("IndustryName")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("IndustryId");

                    b.ToTable("industries");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<int>("Client_id")
                        .HasColumnType("int");

                    b.Property<string>("ProjectImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<DateTime>("Project_createdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Project_enddate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("Client_id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Services", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"), 1L, 1);

                    b.Property<string>("ServiceImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("Varchar(150)");

                    b.HasKey("ServiceID");

                    b.ToTable("services");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Vacancies", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("Varchar(max)");

                    b.Property<string>("PostName")
                        .IsRequired()
                        .HasColumnType("Varchar(150)");

                    b.Property<string>("Task1")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Task2")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("Task3")
                        .IsRequired()
                        .HasColumnType("Varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("vacancies");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Employee", b =>
                {
                    b.HasOne("Star_Security_Services.Models.Data.Department", "department")
                        .WithMany()
                        .HasForeignKey("Dep_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Star_Security_Services.Models.Data.EmpRoles", "roles")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("Star_Security_Services.Models.Data.Projects", b =>
                {
                    b.HasOne("Star_Security_Services.Models.Data.Clients", "clients")
                        .WithMany()
                        .HasForeignKey("Client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clients");
                });
#pragma warning restore 612, 618
        }
    }
}
